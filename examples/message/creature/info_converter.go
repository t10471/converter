// Code generated by "encoder -type=Info"; DO NOT EDIT.
package creature

// GENERATED BY YO. DO NOT EDIT.

import (
	"bytes"
	"encoding/binary"
)

type InfoConverter struct {
	Type   [1]byte `label:"分類"`
	Detail [1]byte `label:"詳細分類"`
}

func (cv *InfoConverter) MarshalBuffer() (*bytes.Buffer, error) {
	buffer := new(bytes.Buffer)
	if err := binary.Write(buffer, binary.BigEndian, cv); err != nil {
		return nil, err
	}
	return buffer, nil
}
func (cv *InfoConverter) UnmarshalBuffer(buffer *bytes.Buffer) error {
	if err := binary.Read(buffer, binary.BigEndian, cv); err != nil {
		return err
	}
	return nil
}
func (cv *InfoConverter) ConvertFrom(original Info) error {
	var err error
	cv.Type, err = original.Type.Encode()
	if err != nil {
		return err
	}
	cv.Detail, err = original.Detail.Encode(original.Type)
	if err != nil {
		return err
	}
	return nil
}
func (cv *InfoConverter) ToOriginal() (Info, error) {
	var err error
	original := Info{}
	err = original.Type.Decode(cv.Type)
	if err != nil {
		return Info{}, err
	}
	err = original.Detail.Decode(cv.Detail, original.Type)
	if err != nil {
		return Info{}, err
	}
	return original, nil
}
